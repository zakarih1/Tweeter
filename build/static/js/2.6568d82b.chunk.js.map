{"version":3,"sources":["../node_modules/bs58/index.js","../../src/rpc/JrpcClient.ts","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/base/baseInjectedProvider.ts","../../src/providers/injectedProviders/base/providerHandlers.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../../src/providers/injectedProviders/slope/providerHandlers.ts","../../src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../../src/providers/injectedProviders/solflare/providerHandlers.ts","../../src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../../src/providers/injectedProviders/sollet/providerHandlers.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","../../src/classes.ts","../../src/error-constants.ts","../../src/Layout.ts","../../src/utils.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../../src/structs/coercions.ts","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/layout.ts","../../src/util/bigint.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/sysvar.ts","../../src/transaction-constants.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/transaction.ts","../../src/util/assert.ts","../../src/system-program.ts","../../src/address-lookup-table-program.ts","../../src/bpf-loader-deprecated.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../src/compute-budget.ts","../../node_modules/fast-stable-stringify/index.js","../../src/util/url-impl.ts","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/util/tx-expiry-custom-errors.ts","../../src/connection.ts","../../src/util/makeWebsocketUrl.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../node_modules/@solana/web3.js/node_modules/tweetnacl/nacl-fast.js","../node_modules/base-x/src/index.js","../node_modules/borsh/lib/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../../src/index.ts"],"names":["basex","require","module","exports","req","res","end","next","chainId","mergeMiddleware","createChainIdMiddleware","createProviderConfigMiddleware","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","createConfigMiddleware","getAccounts","createAsyncMiddleware","method","accounts","response","requestAccounts","handler","result","getSecretKey","createRequestAccountsMiddleware","createGetAccountsMiddleware","createGenericJRPCMiddleware","constructor","state","config","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","switchChain","Promise","setupProvider","engine","providerHandlers","solanaMiddleware","createSolanaMiddleware","configMiddleware","injectedProviderProxy","provider","providerFromEngine","lookupNetwork","getInjectedProviderProxy","getBaseProviderHandlers","injectedProvider","bs58","getPrivateKey","ethErrors","signTransaction","transaction","signMessage","message","signAllTransactions","signAndSendTransaction","txRes","signature","getProviderHandlers","createInjectedProviderProxyMiddleware","data","txMessage","publicKey","getProviderEngineProxy","code","params","conn","allTxns","length","unsignedTx","i","getSlopeHandlers","solflareProviderHandlers","getSolflareHandlers","getSolletHandlers","getTorusHandlers","transactions","connectedChainId","connectedHexChainId","isHexStrict","parseInt","WalletInitializationError","setupEngine","handleInjectedProviderUpdate","_objectSpread","keyPairGenerator","Keypair","Buffer","keyPair","signedMsg","nacl","_providerEngineProxy","sig","txns","enable","privKey","createJsonRpcClient","updateAccount","health","getChainSwitchMiddleware","chainSwitchHandlers","addNewChainConfig","nativeCurrency","rpcUrls","ticker","tickerName","displayName","blockExplorer","switchSolanaChain","createChainSwitchMiddleware","getAccountMiddleware","accountHandlers","updatePrivatekey","privateKey","createAccountMiddleware","SolanaPrivateKeyProvider","providerFactory","SolanaWallet","signedTransaction","signedTransactions","request","Layout","n","b","discr","span","this","offset","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","arguments","forEach","defineProperty","getOwnPropertyDescriptors","defineProperties","toFailures","run","StructError","failure","failures","rest","path","msg","cached","TypeError","isObject","x","print","value","JSON","shiftIterator","input","done","undefined","toFailure","context","struct","branch","type","refinement","Symbol","r","options","coerce","mask","ctx","Array","valid","ts","v","s","k","t","Struct","props","coercer","entries","schema","validator","refiner","assert","create","is","validate","tuples","tuple","error","f","define","name","array","Element","boolean","instance","Class","literal","constant","description","never","nullable","number","isNaN","optional","record","Key","Value","string","Elements","Never","Math","union","Structs","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","toBuffer","val","Error","equal","l","inherits_browserModule","ctor","superCtor","super_","writable","configurable","TempCtor","require$$0","require$$1","isSurrogatePair","charCodeAt","htonl","w","zero2","word","zero8","utils","enc","isArray","slice","replace","p","c","toString","endian","start","len","m","a","d","e","buf","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","common","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","rotr32","ch32","y","z","maj32","p32","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","h","W","inherits","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","Hash","inner","outer","_init","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","form","normalize","join","String","fromCharCode","_checkNormalize","HEX","version","logLevel","args","level","toLowerCase","throwArgumentError","console","log","_log","Logger","levels","DEBUG","INFO","WARNING","makeError","errors","UNKNOWN_ERROR","messageDetails","Uint8Array","hex","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","kind","censorship","permanent","globalLogger","warn","logger","addSlice","isInteger","arrayify","checkSafeUint53","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","isBytes","encode","serialize","SOLANA_SCHEMA","decode","deserialize","decodeUnchecked","deserializeUnchecked","Map","_bn","isPublicKeyData","decoded","equals","eq","toBase58","toJSON","toBytes","toArrayLike","zeroPad","createWithSeed","buffer","fromPublicKey","programId","PublicKey","createProgramAddressSync","seeds","seed","publicKeyBytes","is_on_curve","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","address","err","findProgramAddress","isOnCurve","default","fields","naclLowLevel","chk","den","den2","den4","den6","neq25519","gf1","I","property","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","str","getAlloc","getItemAlloc","item","field","alloc","u64","layout","blob","encodeDecode","bigIntLayout","src","toBigIntLE","toBufferLE","bigInt","encodeData","allocLength","layoutFields","instruction","index","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","NonceAccount","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","PACKET_DATA_SIZE","decodeLength","size","elem","encodeLength","rem_len","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","isAccountSigner","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","map","programIdIndex","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","from","byteArray","accountCount","dataSlice","Message","TransactionStatus","DEFAULT_SIGNATURE","opts","isWritable","pubkey","isSigner","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","add","items","compileMessage","accountMetas","accountMeta","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","compiledInstructions","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","getEstimatedFee","connection","setSigners","seen","sign","uniqueSigners","signer","_partialSign","partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","Transaction","populate","sigPubkeyPair","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","createAccount","lamports","space","transfer","BigInt","assign","base","createAccountWithSeed","createNonceAccount","SystemProgram","fromPubkey","newAccountPubkey","basePubkey","initParams","noncePubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","createLookupTable","recentSlot","bumpSeed","freezeLookupTable","extendLookupTable","addresses","addr","deactivateLookupTable","closeLookupTable","AddressLookupTableProgram","sendOptions","skipPreflight","preflightCommitment","maxRetries","minContextSlot","status","sleep","ms","resolve","setTimeout","getMinNumSignatures","Loader","load","balanceNeeded","program","programInfo","accountPubkey","payer","toPubkey","sendAndConfirmTransaction","commitment","dataLayout","chunkSize","bytesLength","bytesLengthPadding","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","microLamports","ComputeBudgetProgram","objToString","objKeys","obj","isArrayProp","max","propVal","toStr","sort","isFinite","returnVal","URL","globalThis","trailingZeros","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","slot","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","logs","customMessage","TransactionExpiredBlockheightExceededError","timeoutSeconds","TransactionExpiredTimeoutError","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","executable","owner","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","_commitment","_confirmTransactionInitialTimeout","_rpcEndpoint","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","Set","client","wsEndpoint","httpHeaders","fetch","disableRetryOnRateLimit","endpoint","useHttps","Number","makeWebsocketUrl","customFetch","fetchWithMiddleware","init","modifiedInfo","reject","modifiedFetchArgs","clientBrowser","body","agent","headers","too_many_requests_retries","waitTime","statusText","text","callback","createRpcClient","requests","batch","createRpcBatchRequest","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","bind","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","_buildArgs","unsafeRes","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","_args","ownerAddress","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getAccountInfo","getMultipleAccountsInfoAndContext","publicKeys","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configWithoutEncoding","encoding","getParsedProgramAccounts","confirmTransaction","rawSignature","strategy","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","__type","expiryPromise","timeoutMs","timeoutId","checkBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","clearTimeout","removeSignatureListener","getClusterNodes","getVoteAccounts","getSlot","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatus","getSignatureStatuses","values","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getMinimumBalanceForRentExemption","getRecentBlockhashAndContext","getRecentPerformanceSamples","limit","getFeeCalculatorForBlockhash","getFeeForMessage","wireMessage","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","getBlockHeight","getBlockProduction","configOrCommitment","extra","getTransaction","getParsedTransaction","getParsedTransactions","methodName","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","transactionDetails","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","highestConfirmedRoot","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","getSignaturesForAddress","getNonceAndContext","accountInfo","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","timeSinceFetch","Date","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","MS_PER_SLOT","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","originalTx","disableCache","includes","encodedTransaction","includeAccounts","logTrace","traceIndent","sendTransaction","sendRawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","clearInterval","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbacks","cb","_makeSubscription","clientSubscriptionId","fastStableStringify","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","notification","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","dispose","override","onSignature","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","_keypair","keypair","secretKey","generate","fromSecretKey","encoder","fromSeed","ED25519_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPrivateKey","STAKE_CONFIG_ID","unixTimestamp","custodian","Lockup","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","initialize","lockup","staker","withdrawer","stakePubkey","delegate","authorize","custodianPubkey","newAuthorized","newAuthorizedPubkey","stakeAuthorizationType","authorizeWithSeed","authoritySeed","authorityOwner","splitInstruction","split","splitWithSeed","splitStakePubkey","merge","withdraw","deactivate","StakeProgram","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","publicKeyToEthAddress","sha3","Secp256k1Program","ethAddress","recoveryId","createInstructionWithEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","publicKeyCreate","messageHash","recid","website","details","keybaseUsername","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","initializeAccount","voteInit","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","VoteProgram","gf","Float64Array","randombytes","_0","_9","gf0","_121665","D2","X","Y","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","o","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","q","pack25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","reduce","crypto_sign","sm","smlen","crypto_sign_open","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","tmp","mlen","detached","verify","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","self","msCrypto","getRandomValues","min","_Buffer","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","allocUnsafe","fill","isBuffer","pbegin","pend","b58","it1","it2","repeat","__createBinding","k2","get","__setModuleDefault","__decorate","decorators","desc","Reflect","decorate","__importStar","mod","__esModule","hasOwnProperty","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","splice","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","RangeError","readUInt8","readUInt16LE","readUInt32LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","idx","deserializeField","reader","readFixedArray","readArray","readU8","set","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","ToDictionary","Stream","tokens","endOfStream","read","shift","prepend","token","pop","finished","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","byteOffset","byteLength","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints","reversed","reverse","toBigIntBE","width","padStart","toBufferBE","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","window","WebSocket","onopen","emit","onmessage","event","onerror","onclose","optionsOrCallback","send","close","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","CommonClient","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","promise","_login","mark","_callee","resp","wrap","_context","prev","sent","abrupt","stop","_x","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","parse","listeners","then","_ref2","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError"],"mappings":"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","file":"static/js/2.6568d82b.chunk.js","sourcesContent":["var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createFetchMiddleware, providerFromEngine } from '@toruslabs/base-controllers';\nimport { mergeMiddleware, createAsyncMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport bs58 from 'bs58';\nimport { ethErrors } from 'eth-rpc-errors';\nimport { PublicKey, Connection, Keypair } from '@solana/web3.js';\nimport nacl from '@toruslabs/tweetnacl-js';\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createConfigMiddleware(providerConfig) {\n  const {\n    chainId\n  } = providerConfig;\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({\n    rpcTarget\n  });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nfunction createGetAccountsMiddleware(_ref) {\n  let {\n    getAccounts\n  } = _ref;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"getAccounts\") return next();\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\"); // This calls from the prefs controller\n\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createRequestAccountsMiddleware(_ref2) {\n  let {\n    requestAccounts\n  } = _ref2;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"requestAccounts\") return next();\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\"); // This calls the UI login function\n\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== targetMethod) return next();\n    if (!handler) throw new Error(\"WalletMiddleware - \".concat(targetMethod, \" not provided\"));\n    const result = await handler(request);\n    response.result = result;\n    return undefined;\n  });\n}\nfunction createSolanaMiddleware(providerHandlers) {\n  const {\n    getAccounts,\n    requestAccounts,\n    signTransaction,\n    signAndSendTransaction,\n    signAllTransactions,\n    signMessage,\n    getPrivateKey,\n    getSecretKey\n  } = providerHandlers;\n  return mergeMiddleware([createRequestAccountsMiddleware({\n    requestAccounts\n  }), createGetAccountsMiddleware({\n    getAccounts\n  }), createGenericJRPCMiddleware(\"signTransaction\", signTransaction), createGenericJRPCMiddleware(\"signAndSendTransaction\", signAndSendTransaction), createGenericJRPCMiddleware(\"signAllTransactions\", signAllTransactions), createGenericJRPCMiddleware(\"signMessage\", signMessage), createGenericJRPCMiddleware(\"solanaPrivateKey\", getPrivateKey), createGenericJRPCMiddleware(\"solanaSecretKey\", getSecretKey)]);\n}\nfunction createChainSwitchMiddleware(_ref3) {\n  let {\n    addNewChainConfig,\n    switchSolanaChain\n  } = _ref3;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"addSolanaChain\", addNewChainConfig), createGenericJRPCMiddleware(\"switchSolanaChain\", switchSolanaChain)]);\n}\nfunction createAccountMiddleware(_ref4) {\n  let {\n    updatePrivatekey\n  } = _ref4;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"updateAccount\", updatePrivatekey)]);\n}\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass BaseInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$3(_objectSpread$3({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    const engine = new JRPCEngine();\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig);\n    engine.push(configMiddleware);\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async lookupNetwork() {\n    const {\n      chainConfig\n    } = this.config;\n    this.update({\n      chainId: chainConfig.chainId\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  getInjectedProviderProxy(_) {\n    return undefined;\n  }\n\n}\n\nconst getBaseProviderHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [],\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async req => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async req => {\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n    signAllTransactions: async req => {\n      var _req$params, _req$params2;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async req => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return {\n        signature: txRes.signature\n      };\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction createInjectedProviderProxyMiddleware(provider) {\n  return createAsyncMiddleware(async (req, res, _next) => {\n    const result = await provider.request(_objectSpread$2({}, req));\n    res.result = result;\n  });\n}\n\nclass PhantomInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  getInjectedProviderProxy(injectedProvider) {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n\n}\n\nconst getSlopeHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      const {\n        data\n      } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const {\n        data\n      } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async req => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({\n        message: \"Invalid transaction message\"\n      });\n      const {\n        data\n      } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async req => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async req => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({\n        message: \"Invalid transaction message\"\n      });\n      const {\n        data\n      } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = await provider.request({\n        method: \"solana_provider_config\",\n        params: []\n      });\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return {\n        signature: res\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params, _req$params2, _data$signatures;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const {\n        length\n      } = allTxns;\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n\n      const {\n        msg,\n        data\n      } = await injectedProvider.signAllTransactions(unsignedTx);\n      if (!data.publicKey || ((_data$signatures = data.signatures) === null || _data$signatures === void 0 ? void 0 : _data$signatures.length) !== length) throw new Error(msg);\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    }\n  };\n  return providerHandlers;\n};\n\nclass SlopeInjectedProxyProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getSolflareHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider);\n\n  solflareProviderHandlers.signAndSendTransaction = async req => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = await provider.request({\n      method: \"solana_provider_config\",\n      params: []\n    });\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return {\n      signature: res\n    };\n  };\n\n  return solflareProviderHandlers;\n};\n\nclass SolflareInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getSolletHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider);\n\n  providerHandlers.signMessage = async req => {\n    const {\n      signature\n    } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n\n  providerHandlers.signAndSendTransaction = async req => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = await provider.request({\n      method: \"solana_provider_config\",\n      params: []\n    });\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return {\n      signature: res\n    };\n  };\n\n  return providerHandlers;\n};\n\nclass SolletInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getTorusHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_requestAccounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_accounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async req => {\n      var _req$params;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n    signTransaction: async req => {\n      var _req$params2;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return {\n        signature: response\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params4, _req$params5;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass TorusInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  async lookupNetwork() {\n    if (!this.provider) throw ethErrors.provider.custom({\n      message: \"Torus solana provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    const connectedChainId = await this.provider.request({\n      method: \"solana_chainId\"\n    });\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : \"0x\".concat(parseInt(connectedChainId, 10).toString(16));\n    if (chainId !== connectedHexChainId) throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n    this.update({\n      chainId: connectedHexChainId\n    });\n    this.provider.emit(\"connect\", {\n      chainId: this.state.chainId\n    });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  async setupEngine(injectedProvider) {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async handleInjectedProviderUpdate(injectedProvider) {\n    injectedProvider.on(\"accountsChanged\", async accounts => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async chainId => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : \"0x\".concat(parseInt(chainId, 10).toString(16)); // Check if chainId changed and trigger event\n\n      this.configure({\n        chainConfig: _objectSpread$1(_objectSpread$1({}, this.config.chainConfig), {}, {\n          chainId: connectedHexChainId\n        })\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n\n}\n\nasync function getProviderHandlers(_ref) {\n  let {\n    privKey,\n    getProviderEngineProxy\n  } = _ref;\n\n  const keyPairGenerator = () => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n    signTransaction: async req => {\n      var _req$params;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n    signMessage: async req => {\n      var _req$params2;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const _providerEngineProxy = getProviderEngineProxy();\n\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n      const sig = await _providerEngineProxy.request({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())]\n      });\n      return {\n        signature: sig\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params4, _req$params5, _req$params6;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = (_req$params6 = req.params) === null || _req$params6 === void 0 ? void 0 : _req$params6.message;\n\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n\n      return txns;\n    }\n  };\n  return providerHandlers;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaPrivateKeyProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async enable() {\n    if (!this.state.privateKey) throw ethErrors.provider.custom({\n      message: \"Private key is not found in state, plz pass it in constructor state param\",\n      code: 4902\n    });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(privKey) {\n    const providerHandlers = await getProviderHandlers({\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n    });\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async updateAccount(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const existingKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request({\n          method: \"requestAccounts\"\n        })\n      });\n    }\n  }\n\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    this.configure({\n      chainConfig\n    });\n    const privKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n    await this.setupProvider(privKey);\n  }\n\n  async lookupNetwork() {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const health = await this._providerEngineProxy.request({\n      method: \"getHealth\",\n      params: []\n    });\n    const {\n      chainConfig\n    } = this.config;\n    if (health !== \"ok\") throw WalletInitializationError.rpcConnectionError(\"Failed to lookup network for following rpc target: \".concat(chainConfig.rpcTarget));\n    this.update({\n      chainId: chainConfig.chainId\n    });\n\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", {\n        chainId: this.state.chainId\n      });\n    }\n\n    return this.state.chainId;\n  }\n\n  getChainSwitchMiddleware() {\n    const chainSwitchHandlers = {\n      addNewChainConfig: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const {\n          chainId,\n          chainName,\n          rpcUrls,\n          blockExplorerUrls,\n          nativeCurrency\n        } = req.params;\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"SOL\",\n          tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n        });\n      },\n      switchSolanaChain: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      }\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  getAccountMiddleware() {\n    const accountHandlers = {\n      updatePrivatekey: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const {\n          privateKey\n        } = req.params;\n        await this.updateAccount({\n          privateKey\n        });\n      }\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n\n}\n\n_defineProperty(SolanaPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new SolanaPrivateKeyProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nclass SolanaWallet {\n  constructor(provider) {\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = provider;\n  }\n\n  async requestAccounts() {\n    const accounts = await this.provider.request({\n      method: \"requestAccounts\",\n      params: {}\n    });\n    return accounts;\n  }\n\n  async signAndSendTransaction(transaction) {\n    const {\n      signature\n    } = await this.provider.request({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction\n      }\n    });\n    return {\n      signature\n    };\n  }\n\n  async signTransaction(transaction) {\n    const signedTransaction = await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction\n      }\n    });\n    return signedTransaction;\n  }\n\n  async signAllTransactions(transactions) {\n    const signedTransactions = await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions\n      }\n    });\n    return signedTransactions;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"signMessage\",\n      params: {\n        message: data\n      }\n    });\n    return response;\n  }\n\n  async request(args) {\n    const result = await this.provider.request(args);\n    return result;\n  }\n\n}\n\nexport { PhantomInjectedProvider, SlopeInjectedProxyProvider, SolanaPrivateKeyProvider, SolanaWallet, SolflareInjectedProvider, SolletInjectedProvider, TorusInjectedProvider };\n//# sourceMappingURL=solanaProvider.esm.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProviderError = exports.EthereumRpcError = void 0;\nconst fast_safe_stringify_1 = require(\"fast-safe-stringify\");\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP-1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n    constructor(code, message, data) {\n        if (!Number.isInteger(code)) {\n            throw new Error('\"code\" must be an integer.');\n        }\n        if (!message || typeof message !== 'string') {\n            throw new Error('\"message\" must be a nonempty string.');\n        }\n        super(message);\n        this.code = code;\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n    /**\n     * Returns a plain object with all public class properties.\n     */\n    serialize() {\n        const serialized = {\n            code: this.code,\n            message: this.message,\n        };\n        if (this.data !== undefined) {\n            serialized.data = this.data;\n        }\n        if (this.stack) {\n            serialized.stack = this.stack;\n        }\n        return serialized;\n    }\n    /**\n     * Return a string representation of the serialized error, omitting\n     * any circular references.\n     */\n    toString() {\n        return fast_safe_stringify_1.default(this.serialize(), stringifyReplacer, 2);\n    }\n}\nexports.EthereumRpcError = EthereumRpcError;\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n    /**\n     * Create an Ethereum Provider JSON-RPC error.\n     * `code` must be an integer in the 1000 <= 4999 range.\n     */\n    constructor(code, message, data) {\n        if (!isValidEthProviderCode(code)) {\n            throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n        }\n        super(code, message, data);\n    }\n}\nexports.EthereumProviderError = EthereumProviderError;\n// Internal\nfunction isValidEthProviderCode(code) {\n    return Number.isInteger(code) && code >= 1000 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n    if (value === '[Circular]') {\n        return undefined;\n    }\n    return value;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3Nlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGFzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUFnRDtBQVNoRDs7OztHQUlHO0FBQ0gsTUFBYSxnQkFBb0IsU0FBUSxLQUFLO0lBTTVDLFlBQVksSUFBWSxFQUFFLE9BQWUsRUFBRSxJQUFRO1FBRWpELElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzNCLE1BQU0sSUFBSSxLQUFLLENBQ2IsNEJBQTRCLENBQzdCLENBQUM7U0FDSDtRQUNELElBQUksQ0FBQyxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQzNDLE1BQU0sSUFBSSxLQUFLLENBQ2Isc0NBQXNDLENBQ3ZDLENBQUM7U0FDSDtRQUVELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUNsQjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVM7UUFDUCxNQUFNLFVBQVUsR0FBK0I7WUFDN0MsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1NBQ3RCLENBQUM7UUFDRixJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO1lBQzNCLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztTQUM3QjtRQUNELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUMvQjtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxRQUFRO1FBQ04sT0FBTyw2QkFBYSxDQUNsQixJQUFJLENBQUMsU0FBUyxFQUFFLEVBQ2hCLGlCQUFpQixFQUNqQixDQUFDLENBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQXRERCw0Q0FzREM7QUFFRDs7O0dBR0c7QUFDSCxNQUFhLHFCQUF5QixTQUFRLGdCQUFtQjtJQUUvRDs7O09BR0c7SUFDSCxZQUFZLElBQVksRUFBRSxPQUFlLEVBQUUsSUFBUTtRQUVqRCxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDakMsTUFBTSxJQUFJLEtBQUssQ0FDYiwyREFBMkQsQ0FDNUQsQ0FBQztTQUNIO1FBRUQsS0FBSyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztDQUNGO0FBaEJELHNEQWdCQztBQUVELFdBQVc7QUFFWCxTQUFTLHNCQUFzQixDQUFDLElBQVk7SUFDMUMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQztBQUNoRSxDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxDQUFVLEVBQUUsS0FBYztJQUNuRCxJQUFJLEtBQUssS0FBSyxZQUFZLEVBQUU7UUFDMUIsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMifQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorValues = exports.errorCodes = void 0;\nexports.errorCodes = {\n    rpc: {\n        invalidInput: -32000,\n        resourceNotFound: -32001,\n        resourceUnavailable: -32002,\n        transactionRejected: -32003,\n        methodNotSupported: -32004,\n        limitExceeded: -32005,\n        parse: -32700,\n        invalidRequest: -32600,\n        methodNotFound: -32601,\n        invalidParams: -32602,\n        internal: -32603,\n    },\n    provider: {\n        userRejectedRequest: 4001,\n        unauthorized: 4100,\n        unsupportedMethod: 4200,\n        disconnected: 4900,\n        chainDisconnected: 4901,\n    },\n};\nexports.errorValues = {\n    '-32700': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    },\n    '-32600': {\n        standard: 'JSON RPC 2.0',\n        message: 'The JSON sent is not a valid Request object.',\n    },\n    '-32601': {\n        standard: 'JSON RPC 2.0',\n        message: 'The method does not exist / is not available.',\n    },\n    '-32602': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid method parameter(s).',\n    },\n    '-32603': {\n        standard: 'JSON RPC 2.0',\n        message: 'Internal JSON-RPC error.',\n    },\n    '-32000': {\n        standard: 'EIP-1474',\n        message: 'Invalid input.',\n    },\n    '-32001': {\n        standard: 'EIP-1474',\n        message: 'Resource not found.',\n    },\n    '-32002': {\n        standard: 'EIP-1474',\n        message: 'Resource unavailable.',\n    },\n    '-32003': {\n        standard: 'EIP-1474',\n        message: 'Transaction rejected.',\n    },\n    '-32004': {\n        standard: 'EIP-1474',\n        message: 'Method not supported.',\n    },\n    '-32005': {\n        standard: 'EIP-1474',\n        message: 'Request limit exceeded.',\n    },\n    '4001': {\n        standard: 'EIP-1193',\n        message: 'User rejected the request.',\n    },\n    '4100': {\n        standard: 'EIP-1193',\n        message: 'The requested account and/or method has not been authorized by the user.',\n    },\n    '4200': {\n        standard: 'EIP-1193',\n        message: 'The requested method is not supported by this Ethereum provider.',\n    },\n    '4900': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from all chains.',\n    },\n    '4901': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from the specified chain.',\n    },\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9yLWNvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUF1QmEsUUFBQSxVQUFVLEdBQWU7SUFDcEMsR0FBRyxFQUFFO1FBQ0gsWUFBWSxFQUFFLENBQUMsS0FBSztRQUNwQixnQkFBZ0IsRUFBRSxDQUFDLEtBQUs7UUFDeEIsbUJBQW1CLEVBQUUsQ0FBQyxLQUFLO1FBQzNCLG1CQUFtQixFQUFFLENBQUMsS0FBSztRQUMzQixrQkFBa0IsRUFBRSxDQUFDLEtBQUs7UUFDMUIsYUFBYSxFQUFFLENBQUMsS0FBSztRQUNyQixLQUFLLEVBQUUsQ0FBQyxLQUFLO1FBQ2IsY0FBYyxFQUFFLENBQUMsS0FBSztRQUN0QixjQUFjLEVBQUUsQ0FBQyxLQUFLO1FBQ3RCLGFBQWEsRUFBRSxDQUFDLEtBQUs7UUFDckIsUUFBUSxFQUFFLENBQUMsS0FBSztLQUNqQjtJQUNELFFBQVEsRUFBRTtRQUNSLG1CQUFtQixFQUFFLElBQUk7UUFDekIsWUFBWSxFQUFFLElBQUk7UUFDbEIsaUJBQWlCLEVBQUUsSUFBSTtRQUN2QixZQUFZLEVBQUUsSUFBSTtRQUNsQixpQkFBaUIsRUFBRSxJQUFJO0tBQ3hCO0NBQ0YsQ0FBQztBQUVXLFFBQUEsV0FBVyxHQUFHO0lBQ3pCLFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLE9BQU8sRUFBRSx1R0FBdUc7S0FDakg7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsY0FBYztRQUN4QixPQUFPLEVBQUUsOENBQThDO0tBQ3hEO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLGNBQWM7UUFDeEIsT0FBTyxFQUFFLCtDQUErQztLQUN6RDtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLE9BQU8sRUFBRSw4QkFBOEI7S0FDeEM7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsY0FBYztRQUN4QixPQUFPLEVBQUUsMEJBQTBCO0tBQ3BDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLGdCQUFnQjtLQUMxQjtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSxxQkFBcUI7S0FDL0I7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsdUJBQXVCO0tBQ2pDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtLQUNqQztJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSx1QkFBdUI7S0FDakM7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUseUJBQXlCO0tBQ25DO0lBQ0QsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLDRCQUE0QjtLQUN0QztJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSwwRUFBMEU7S0FDcEY7SUFDRCxNQUFNLEVBQUU7UUFDTixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsa0VBQWtFO0tBQzVFO0lBQ0QsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLCtDQUErQztLQUN6RDtJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSx3REFBd0Q7S0FDbEU7Q0FDRixDQUFDIn0=","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {\n  PACKET_DATA_SIZE,\n  SIGNATURE_LENGTH_IN_BYTES,\n} from './transaction-constants';\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\nimport {u64} from './util/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport * as bigintLayout from './util/bigint';\nimport {SystemProgram} from './system-program';\nimport {TransactionInstruction} from './transaction';\nimport {decodeData, encodeData, IInstructionInputData} from './instruction';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport {u64} from './util/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","export const URL = globalThis.URL;\nexport const URLSearchParams = globalThis.URLSearchParams;\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethErrors = void 0;\nconst classes_1 = require(\"./classes\");\nconst utils_1 = require(\"./utils\");\nconst error_constants_1 = require(\"./error-constants\");\nexports.ethErrors = {\n    rpc: {\n        /**\n         * Get a JSON RPC 2.0 Parse (-32700) error.\n         */\n        parse: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.parse, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n         */\n        invalidRequest: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidRequest, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n         */\n        invalidParams: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidParams, arg),\n        /**\n         * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n         */\n        methodNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotFound, arg),\n        /**\n         * Get a JSON RPC 2.0 Internal (-32603) error.\n         */\n        internal: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.internal, arg),\n        /**\n         * Get a JSON RPC 2.0 Server error.\n         * Permits integer error codes in the [ -32099 <= -32005 ] range.\n         * Codes -32000 through -32004 are reserved by EIP-1474.\n         */\n        server: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum RPC Server errors must provide single object argument.');\n            }\n            const { code } = opts;\n            if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n                throw new Error('\"code\" must be an integer such that: -32099 <= code <= -32005');\n            }\n            return getEthJsonRpcError(code, opts);\n        },\n        /**\n         * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n         */\n        invalidInput: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidInput, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n         */\n        resourceNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceNotFound, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n         */\n        resourceUnavailable: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceUnavailable, arg),\n        /**\n         * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n         */\n        transactionRejected: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.transactionRejected, arg),\n        /**\n         * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n         */\n        methodNotSupported: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotSupported, arg),\n        /**\n         * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n         */\n        limitExceeded: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.limitExceeded, arg),\n    },\n    provider: {\n        /**\n         * Get an Ethereum Provider User Rejected Request (4001) error.\n         */\n        userRejectedRequest: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.userRejectedRequest, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unauthorized (4100) error.\n         */\n        unauthorized: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unauthorized, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unsupported Method (4200) error.\n         */\n        unsupportedMethod: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unsupportedMethod, arg);\n        },\n        /**\n         * Get an Ethereum Provider Not Connected (4900) error.\n         */\n        disconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.disconnected, arg);\n        },\n        /**\n         * Get an Ethereum Provider Chain Not Connected (4901) error.\n         */\n        chainDisconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.chainDisconnected, arg);\n        },\n        /**\n         * Get a custom Ethereum Provider error.\n         */\n        custom: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum Provider custom errors must provide single object argument.');\n            }\n            const { code, message, data } = opts;\n            if (!message || typeof message !== 'string') {\n                throw new Error('\"message\" must be a nonempty string');\n            }\n            return new classes_1.EthereumProviderError(code, message, data);\n        },\n    },\n};\n// Internal\nfunction getEthJsonRpcError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumRpcError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction getEthProviderError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumProviderError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction parseOpts(arg) {\n    if (arg) {\n        if (typeof arg === 'string') {\n            return [arg];\n        }\n        else if (typeof arg === 'object' && !Array.isArray(arg)) {\n            const { message, data } = arg;\n            if (message && typeof message !== 'string') {\n                throw new Error('Must specify string message.');\n            }\n            return [message || undefined, data];\n        }\n    }\n    return [];\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx1Q0FBb0U7QUFDcEUsbUNBQTZDO0FBQzdDLHVEQUErQztBQWVsQyxRQUFBLFNBQVMsR0FBRztJQUN2QixHQUFHLEVBQUU7UUFFSDs7V0FFRztRQUNILEtBQUssRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUNyRCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUMxQjtRQUVEOztXQUVHO1FBQ0gsY0FBYyxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQzlELDRCQUFVLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQ25DO1FBRUQ7O1dBRUc7UUFDSCxhQUFhLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FDN0QsNEJBQVUsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FDbEM7UUFFRDs7V0FFRztRQUNILGNBQWMsRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUM5RCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUNuQztRQUVEOztXQUVHO1FBQ0gsUUFBUSxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQ3hELDRCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQzdCO1FBRUQ7Ozs7V0FJRztRQUNILE1BQU0sRUFBRSxDQUFJLElBQTJCLEVBQUUsRUFBRTtZQUN6QyxJQUFJLENBQUMsSUFBSSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM1RCxNQUFNLElBQUksS0FBSyxDQUFDLGlFQUFpRSxDQUFDLENBQUM7YUFDcEY7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","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {URL} from './util/url-impl';\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction, TransactionStatus} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {toBuffer} from './util/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './util/tx-expiry-custom-errors';\nimport {makeWebsocketUrl} from './util/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: new Message(result.transaction.message),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {URL} from './url-impl';\n\nexport function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMessageFromCode = exports.serializeError = exports.EthereumProviderError = exports.EthereumRpcError = exports.ethErrors = exports.errorCodes = void 0;\nconst classes_1 = require(\"./classes\");\nObject.defineProperty(exports, \"EthereumRpcError\", { enumerable: true, get: function () { return classes_1.EthereumRpcError; } });\nObject.defineProperty(exports, \"EthereumProviderError\", { enumerable: true, get: function () { return classes_1.EthereumProviderError; } });\nconst utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"serializeError\", { enumerable: true, get: function () { return utils_1.serializeError; } });\nObject.defineProperty(exports, \"getMessageFromCode\", { enumerable: true, get: function () { return utils_1.getMessageFromCode; } });\nconst errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"ethErrors\", { enumerable: true, get: function () { return errors_1.ethErrors; } });\nconst error_constants_1 = require(\"./error-constants\");\nObject.defineProperty(exports, \"errorCodes\", { enumerable: true, get: function () { return error_constants_1.errorCodes; } });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQW9FO0FBVWxFLGlHQVZPLDBCQUFnQixPQVVQO0FBQ2hCLHNHQVh5QiwrQkFBcUIsT0FXekI7QUFWdkIsbUNBRWlCO0FBU2YsK0ZBVkEsc0JBQWMsT0FVQTtBQUNkLG1HQVhnQiwwQkFBa0IsT0FXaEI7QUFUcEIscUNBQXFDO0FBS25DLDBGQUxPLGtCQUFTLE9BS1A7QUFKWCx1REFBK0M7QUFHN0MsMkZBSE8sNEJBQVUsT0FHUCJ9"],"sourceRoot":""}