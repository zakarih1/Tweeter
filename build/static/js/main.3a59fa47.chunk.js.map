{"version":3,"sources":["defaultimgs.js","components/TweetInFeed.js","pages/Home.js","pages/Profile.js","pages/Settings.js","components/Sidebar.js","images/NARUTO.PNG","images/cpf.PNG","images/metamask.PNG","components/Rightbar.js","images/youtube.png","App.js","reportWebVitals.js","index.js"],"names":["defaultImgs","TweetInFeed","profile","useState","tweetArr","setTweetArr","useMoralis","Moralis","account","count","setCount","useEffect","Tweets","Object","extend","query","Query","equalTo","find","results","console","log","error","getTweets","map","e","className","src","attributes","tweeterPfp","alt","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day","tweetTxt","tweetImg","fill","size","svg","onClick","reverse","Home","user","User","current","inputFile","useRef","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","contractProcessor","useWeb3ExecuteFunction","data","file","File","name","saveIPFS","img","ipfs","options","contractAddress","functionName","abi","params","msgValue","Units","ETH","fetch","onSuccess","saveTweet","onError","message","newTweet","set","pfp","ethAddress","username","save","window","location","reload","label","value","type","onChange","target","width","click","ref","event","files","URL","createObjectURL","style","display","backgroundColor","Profile","banner","to","bio","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","setUsername","setBio","isAuthenticated","Web3Api","useMoralisWeb3Api","fetchNFTs","chain","address","getNFTs","mumbaiNFTs","images","result","url","JSON","parse","metadata","image","includes","replace","saveEdits","first","myDetails","labelBgColor","i","Sidebar","Rightbar","trends","NARUTO","text","link","cpf","metamask","prefixIcon","open","App","logOut","then","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.3a59fa47.chunk.js","sourcesContent":["export const defaultImgs = [\r\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/1\",\r\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/2\",\r\n];\r\n","import React from \"react\";\r\nimport './TweetInFeed.css';\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon } from \"web3uikit\";\r\n import { useMoralis } from \"react-moralis\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst TweetInFeed = ({ profile }) => {\r\n   const [tweetArr, setTweetArr] = useState();\r\n   const { Moralis,account } = useMoralis();\r\n  const [count, setCount] = useState(0);\r\n\r\n useEffect(() => {\r\n   async function getTweets() {\r\n     try {\r\n       const Tweets = Moralis.Object.extend(\"Tweets\");\r\n       const query = new Moralis.Query(Tweets);\r\n       if (profile) {\r\n         query.equalTo(\"tweeterAcc\", account);\r\n       }\r\n       const results = await query.find();\r\n \r\n       setTweetArr(results);\r\n       console.log(results);\r\n     } catch (error) {\r\n       console.error(error);\r\n     }\r\n   }\r\n   getTweets();\r\n}, [profile,Moralis.Object,Moralis.Query,account]);\r\n\r\nreturn (\r\n   <>\r\n     {tweetArr?.map((e) => {\r\n       return (\r\n         <>\r\n           <div className=\"feedTweet\">\r\n             <img src={e.attributes.tweeterPfp ? e.attributes.tweeterPfp : defaultImgs[0]} className=\"profilePic\" alt=\"ases\"></img>\r\n             <div className=\"completeTweet\">\r\n               <div className=\"who\">\r\n               {e.attributes.tweeterUserName.slice(0, 6)}\r\n                 <div className=\"accWhen\">{\r\n                       `${e.attributes.tweeterAcc.slice(0, 4)}...${e.attributes.tweeterAcc.slice(38)} ·\r\n                       ${e.attributes.createdAt.toLocaleString('en-us', { month: 'long' })} \r\n                       ${e.attributes.createdAt.toLocaleString('en-us', { day: 'numeric' })}\r\n                       ` \r\n                     }\r\n                     </div>\r\n               </div>\r\n               <div className=\"tweetContent\">\r\n               {e.attributes.tweetTxt}\r\n               {e.attributes.tweetImg && (\r\n                       <img\r\n                         src={e.attributes.tweetImg}\r\n                         className=\"tweetImg\" alt=\"ses\"\r\n                       ></img>\r\n                     )}\r\n               </div>\r\n               <div className=\"interactions\">\r\n                 <div className=\"interactionNums\">\r\n                   <Icon fill=\"#ebebeb\" size={20} svg=\"messageCircle\" />\t\t   \r\n                 </div>\r\n\t\t\t\t \r\n                 <div className=\"interactionNums\">\r\n                   <Icon fill=\"#ebebeb\" size={20} svg=\"star\" />\r\n                         <p>{count}</p>\r\n              \r\n\t        <button onClick={() =>{ setCount(count + 1)}}>Vote< /button>\r\n\r\n                 </div>\r\n\t\t\t\t \r\n                 <div className=\"interactionNums\">\r\n                    <Icon fill=\"#ebebeb\" size={20} svg=\"matic\" />\r\n   \r\n  </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </>\r\n       );\r\n     }).reverse()}\r\n   </>\r\n )\r\n};\r\n\r\nexport default TweetInFeed;","import React from \"react\";\r\n import \"./Home.css\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { TextArea, Icon } from \"web3uikit\";\r\nimport TweetInFeed from \"../components/TweetInFeed\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useMoralis,useWeb3ExecuteFunction } from \"react-moralis\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n \r\n const { Moralis} = useMoralis();\r\n const user = Moralis.User.current();\r\n const inputFile = useRef(null);\r\n const [selectedFile, setSelectedFile] = useState();\r\n const [theFile, setTheFile] = useState();\r\n const [tweet, setTweet] = useState();\r\n const contractProcessor = useWeb3ExecuteFunction();\r\n\r\n \r\nasync function maticTweet() {\r\n   if (!tweet) return;\r\n   let img;\r\n   if (theFile) {\r\n     const data = theFile;\r\n     const file = new Moralis.File(data.name, data);\r\n     await file.saveIPFS();\r\n     img = file.ipfs();\r\n   }else{\r\n     img = \"No Img\"\r\n   }\r\n \r\n   let options = {\r\n     contractAddress: \"0x3fa8dc6ed5b002c73f5fccef510a104dc028ba73\",\r\n     functionName: \"addTweet\",\r\n     abi: [{\r\n       \"inputs\": [\r\n         {\r\n           \"internalType\": \"string\",\r\n           \"name\": \"tweetTxt\",\r\n           \"type\": \"string\"\r\n         },\r\n         {\r\n           \"internalType\": \"string\",\r\n           \"name\": \"tweetImg\",\r\n           \"type\": \"string\"\r\n         }\r\n       ],\r\n       \"name\": \"addTweet\",\r\n       \"outputs\": [],\r\n       \"stateMutability\": \"payable\",\r\n       \"type\": \"function\"\r\n     }],\r\n     params: {\r\n       tweetTxt: tweet,\r\n       tweetImg: img,\r\n     },\r\n     msgValue: Moralis.Units.ETH(1),\r\n   }\r\n \r\n   await contractProcessor.fetch({\r\n     params: options,\r\n     onSuccess: () => {\r\n       saveTweet();\r\n     },\r\n     onError: (error) => {\r\n       console.log(error.data.message)\r\n     }\r\n   });\r\n }\r\n \r\n \r\nasync function saveTweet() {\r\n \r\n   if(!tweet) return;\r\n   const Tweets = Moralis.Object.extend(\"Tweets\");\r\n   const newTweet = new Tweets();\r\n \r\n   newTweet.set(\"tweetTxt\", tweet);\r\n   newTweet.set(\"tweeterPfp\", user.attributes.pfp);\r\n   newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\r\n   newTweet.set(\"tweeterUserName\", user.attributes.username);\r\n//   newTweet.set(\"posté le\", tweet.Date.);\r\n\r\n   if (theFile) {\r\n     const data = theFile;\r\n     const file = new Moralis.File(data.name, data);\r\n     await file.saveIPFS();\r\n     newTweet.set(\"tweetImg\", file.ipfs());\r\n   }\r\n   await newTweet.save();\r\n   window.location.reload();\r\n }\r\n \r\n \r\n  const onImageClick = () => {\r\n   inputFile.current.click();\r\n};\r\n \r\n  const changeHandler = (event) => {\r\n   const img = event.target.files[0];\r\n   setTheFile(img);\r\n   setSelectedFile(URL.createObjectURL(img));\r\n};\r\n \r\n return (\r\n   <>\r\n   <div className=\"pageIdentify\">Home</div>\r\n\t<div className=\"mainContent\">\r\n       <div className=\"profileTweet\">\r\n         <img src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]} className=\"profilePic\" alt=\"aqz\"></img>\r\n         <div className=\"tweetBox\">\r\n           <TextArea\r\n             label=\"\"\r\n             name=\"tweetTxtArea\"\r\n             value=\"Bienvenue : pour tweeter , écrivez ici et cliquez sur  Tweet\"\r\n             type=\"text\"\r\n             onChange={(e) => setTweet(e.target.value)}\r\n             width=\"95%\"\r\n           ></TextArea>\r\n           {selectedFile && (\r\n             <img src={selectedFile} className=\"tweetImg\" alt=\"zz\"></img>\r\n           )}\r\n           <div className=\"imgOrTweet\">\r\n             <div className=\"imgDiv\" onClick={onImageClick}>\r\n             <input\r\n                 type=\"file\"\r\n                 name=\"file\"\r\n                 ref={inputFile}\r\n                 onChange={changeHandler}\r\n                 style={{ display: \"none\"}}\r\n               />\r\n               <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\r\n             </div>\r\n             <div className=\"tweetOptions\">\r\n               <div className=\"tweet\" onClick={saveTweet}>Tweet</div>\r\n               <div className=\"tweet\" onClick={maticTweet} style={{ backgroundColor: \"#8247e5\" }}>\r\n                 <Icon fill=\"#ffffff\" size={20} svg=\"matic\" />\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <TweetInFeed profile={false}/>\r\n     </div>\r\n   </>\r\n );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Profile.css';\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport TweetInFeed from \"../components/TweetInFeed\";\r\n import { useMoralis } from \"react-moralis\";\r\n\r\n\r\nconst Profile = () => {\r\n  const { Moralis} = useMoralis();\r\n  const user = Moralis.User.current();\r\n\r\n return (\r\n   <>\r\n   <div className=\"pageIdentify\">Profile</div>\r\n   <img className=\"profileBanner\" src={user.attributes.banner?user.attributes.banner : defaultImgs[1]} alt=\"aza\" ></img>\r\n   <div className=\"pfpContainer\">\r\n     <img className=\"profilePFP\" src={user.attributes.banner?user.attributes.banner : defaultImgs[0]} alt=\"azaz\" ></img>\r\n     <div className=\"profileName\">{user.attributes.username.slice(0,6)}</div>\r\n     <div className=\"profileWallet\">\r\n             {`${user.attributes.ethAddress.slice(0, 4)}...${user.attributes.ethAddress.slice(38)}`}\r\n\t </div>\r\n     <Link to=\"/settings\">\r\n         <div className=\"profileEdit\">Edit profile</div>\r\n     </Link>\r\n     <div className=\"profileBio\">\r\n\t {user.attributes.bio}\r\n     </div>\r\n     <div className=\"profileTabs\">\r\n         <div className=\"profileTab\">\r\n         VOS  TWEETS\r\n         </div>\r\n     </div>\r\n   </div>\r\n   <TweetInFeed profile={true}></TweetInFeed>\r\n   </>\r\n );\r\n};\r\n\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport './Settings.css';\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Input, Icon } from \"web3uikit\";\r\n \r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\n\r\n\r\nconst Settings = () => {\r\n\t\r\n\tconst [pfps, setPfps] = useState([]);\r\n const [selectedPFP, setSelectedPFP] = useState();\r\n const inputFile = useRef(null);\r\n const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\r\n\r\n const [theFile, setTheFile] = useState();\r\n const [username, setUsername] = useState();\r\n const [bio, setBio] = useState();\r\n const { Moralis, isAuthenticated, account } = useMoralis();\r\n const Web3Api = useMoralisWeb3Api();\r\n \r\n\r\n \r\n const resolveLink = (url) => {\r\n   if (!url || !url.includes(\"ipfs://\")) return url;\r\n   return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\r\n};\r\n \r\n useEffect(() => {\r\n   const fetchNFTs = async () => {\r\n     const options = {\r\n       chain: \"mumbai\",\r\n       address: account\r\n     }\r\n \r\n     const mumbaiNFTs = await Web3Api.account.getNFTs(options);\r\n     const images = mumbaiNFTs.result.map(\r\n       (e) => resolveLink(JSON.parse(e.metadata)?.image)\r\n     );\r\n     setPfps(images);\r\n   }\r\n   fetchNFTs();\r\n },[isAuthenticated,Moralis, account,Web3Api.account])\r\n \r\n\r\nconst onBannerClick = () => {\r\n   inputFile.current.click();\r\n};\r\n\r\nconst changeHandler = (event) => {\r\n   const img = event.target.files[0];\r\n   setTheFile(img);\r\n   setSelectedFile(URL.createObjectURL(img));\r\n};\r\n\r\nconst saveEdits = async () => {\r\n   const User = Moralis.Object.extend(\"_User\");\r\n   const query = new Moralis.Query(User);\r\n   const myDetails = await query.first();\r\n \r\n   if (bio){\r\n     myDetails.set(\"bio\", bio);\r\n   }\r\n \r\n   if (selectedPFP){\r\n     myDetails.set(\"pfp\", selectedPFP);\r\n   }\r\n \r\n   if (username){\r\n     myDetails.set(\"username\", username);\r\n   }\r\n \r\n   if (theFile) {\r\n     const data = theFile;\r\n     const file = new Moralis.File(data.name, data);\r\n     await file.saveIPFS();\r\n     myDetails.set(\"banner\", file.ipfs());\r\n   }\r\n \r\n   await myDetails.save();\r\n   window.location.reload();\r\n};\r\n\r\nreturn (\r\n   <>\r\n     <div className=\"pageIdentify\">Settings</div>\r\n     <div className=\"settingsPage\">\r\n       <Input\r\n         label=\"Name\"\r\n         name=\"NameChange\"\r\n         width=\"100%\"\r\n         labelBgColor=\"#141d26\"\r\n         onChange={(e)=> setUsername(e.target.value)}\r\n       />\r\n \r\n       <Input\r\n         label=\"Bio\"\r\n         name=\"bioChange\"\r\n         width=\"100%\"\r\n         labelBgColor=\"#141d26\"\r\n         onChange={(e)=> setBio(e.target.value)}\r\n       />\r\n \r\n       <div className=\"pfp\">\r\n         Profile Image (Your NFTs)\r\n \r\n         <div className=\"pfpOptions\">\r\n           {pfps.map((e,i) => {\r\n \r\n             return(\r\n               <>\r\n               <img\r\n               src={e}\r\n               className={\r\n                 selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\r\n               }\r\n               onClick={() => {setSelectedPFP(pfps[i]);}}\r\n               alt=\"defc\"></img>\r\n               </>\r\n             )\r\n           })}\r\n         </div>\r\n       </div>\r\n \r\n       <div className=\"pfp\">\r\n         Profile Banner\r\n         <div className=\"pfpOptions\">\r\n           <img\r\n             src={selectedFile}\r\n             onClick={onBannerClick}\r\n             className=\"banner\"\r\n           alt=\"ddf\"></img>\r\n           <input\r\n             type=\"file\"\r\n             name=\"file\"\r\n             ref={inputFile}\r\n             onChange={changeHandler}\r\n             style={{ display: \"none\" }}\r\n           />\r\n         </div>\r\n       </div>\r\n       <div className=\"save\"  onClick={() => saveEdits()} >\r\n         Save\r\n       </div>\r\n     </div>\r\n   </>\r\n );\r\n};\r\n\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport './Sidebar.css';\r\nimport { Icon } from \"web3uikit\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useMoralis } from \"react-moralis\";\r\n//import { defaultImgs } from \"../defaultimgs\";\r\n\r\nconst Sidebar = () => {\r\n return (\r\n   <>\r\n     <div className=\"siderContent\">\r\n  \r\n\r\n        <div className=\"menu\">\r\n         <div className=\"details\">\r\n           <Icon fill=\"#ffffff\" size={33} svg=\"twitter\" />\r\n         </div>\r\n \r\n         <Link to=\"/\" className=\"link\">\r\n           <div className=\"menuItems\">\r\n             <Icon fill=\"#ffffff\" size={33} svg=\"list\" />\r\n             Home\r\n           </div>\r\n         </Link>\r\n \r\n         <Link to=\"/profile\" className=\"link\">\r\n           <div className=\"menuItems\">\r\n             <Icon fill=\"#ffffff\" size={33} svg=\"user\" />\r\n             Profile\r\n           </div>\r\n         </Link>\r\n \r\n         <Link to=\"/settings\" className=\"link\">\r\n           <div className=\"menuItems\">\r\n             <Icon fill=\"#ffffff\" size={33} svg=\"cog\" />\r\n             Settings\r\n           </div>\r\n         </Link>\r\n       </div>\r\n \r\n      </div>\r\n  \r\n  </>\r\n );\r\n};\r\n\r\n\r\nexport default Sidebar;\r\n\r\n","export default __webpack_public_path__ + \"static/media/NARUTO.219edb48.PNG\";","export default __webpack_public_path__ + \"static/media/cpf.f50e7ccd.PNG\";","export default __webpack_public_path__ + \"static/media/metamask.bc43ff72.PNG\";","import React from \"react\";\r\nimport './Rightbar.css';\r\nimport NARUTO from \"../images/NARUTO.PNG\";\r\nimport cpf from \"../images/cpf.PNG\";\r\nimport metamask from \"../images/metamask.PNG\";\r\nimport youtube from \"../images/youtube.png\";\r\n//import js from \"../images/js.png\";\r\nimport { Input } from \"web3uikit\";\r\n\r\n\r\nconst Rightbar = () => {\r\n  const trends = [\r\n    {\r\n      img: NARUTO,\r\n      text: \"NARUTO OP8【NICO Touches the Walls - Diver】\",\r\n      link: \"https://www.youtube.com/watch?v=NRXRGewgq5c\",\r\n    },\r\n    {\r\n      img: cpf,\r\n      text: \"Conpte Pro Formation...\",\r\n      link: \"https://www.moncompteformation.gouv.fr/espace-prive/html/#/\",\r\n     },\r\n    {\r\n      img: metamask,\r\n      text: \"Portefeuille Numérique \",\r\n      link: \"https://www.youtube.com/watch?v=YVgfHZMFFFQ\",\r\n    }\r\n  /*   {\r\n      img: js,\r\n      text: \"Become a Web3 Developer with just simple JS...\",\r\n      link: \"https://metamask.moralis.io/all-courses\",\r\n    },\r\n   */  \r\n  ];\r\n\r\n  return (\r\n   <>\r\n   <div className=\"rightbarContent\">\r\n     <Input\r\n       label=\"Search Twitter\"\r\n       name =\"Search Twitter\"\r\n       prefixIcon=\"search\"\r\n       labelBgColor=\"#141d26\"\r\n       >\r\n     </Input>\r\n \r\n   <div className=\"trends\">\r\n     News For You\r\n     {trends.map((e) => {\r\n         return(\r\n           <>\r\n           <div className=\"trend\" onClick={() => window.open(e.link)}>\r\n             <img src={e.img} className=\"trendImg\" alt=\"aa\"></img>\r\n             <div className=\"trendText\">{e.text}</div>\r\n           </div>\r\n           </>\r\n         )\r\n     })}\r\n   </div>\r\n \r\n   </div>\r\n   </>\r\n );\r\n};\r\n\r\nexport default Rightbar;\r\n\r\n","export default __webpack_public_path__ + \"static/media/youtube.afdf35e4.png\";","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Settings from \"./pages/Settings\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Rightbar from \"./components/Rightbar\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { ConnectButton, Icon } from \"web3uikit\";\r\n\r\nconst App = () => {\r\n const { isAuthenticated, Moralis } = useMoralis();\r\n\r\nreturn (\r\n   <>\r\n   {isAuthenticated ? (\r\n     <div className=\"page\">\r\n       <div className=\"sideBar\">\r\n         <Sidebar />\r\n         <div\r\n             className=\"logout\"\r\n             onClick={() => {\r\n               Moralis.User.logOut().then(() => {\r\n                 window.location.reload();\r\n               });\r\n             }}\r\n           >\r\n             Logout\r\n           </div>\r\n       </div>\r\n       <div className=\"mainWindow\">\r\n         <Routes>\r\n           <Route path=\"/\" element={<Home />} />\r\n           <Route path=\"/profile\" element={<Profile />} />\r\n           <Route path=\"/settings\" element={<Settings />} />\r\n         </Routes>\r\n       </div>\r\n       <div className=\"rightBar\">\r\n         <Rightbar />\r\n       </div>\r\n     </div>\r\n     ) : (\r\n       <div className=\"loginPage\">\r\n         <Icon fill=\"#ffffff\" size={40} svg=\"twitter\" />\r\n         <ConnectButton />\r\n       </div>\r\n \r\n     )}\r\n   </>\r\n );\r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { NotificationProvider } from 'web3uikit';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MoralisProvider appId=\"8hA8y1KH6WNv60jYbwKXoDt5KkWbg4hd8EUF5zoV\" serverUrl=\"https://1g1puqyhstra.usemoralis.com:2053/server\">\r\n      <NotificationProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      </NotificationProvider>\r\n    </MoralisProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}